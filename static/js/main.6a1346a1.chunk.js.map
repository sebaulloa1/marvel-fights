{"version":3,"sources":["components/Layout/Sidebar.module.css","components/Search/ModalItem.module.css","components/Rankings/RankingsTable.module.css","components/Cards/Card.module.css","components/Cards/CharacterCard.module.css","components/Search/HomeInput.module.css","components/Search/CharacterModal.module.css","components/Layout/Layout.module.css","components/Search/FightsInput.module.css","components/UI/HomeModal.module.css","components/Layout/HomeFlexWrapper.module.css","components/UI/Banner.module.css","components/UI/FightHolder.module.css","components/UI/Versus.module.css","store/fights-slice.js","components/Layout/Sidebar.js","components/Layout/Layout.js","components/Cards/Card.js","store/fights-actions.js","store/rankings-actions.js","store/rankings-slice.js","components/UI/FightButton.js","components/Layout/HomeFlexWrapper.js","components/Search/FightsInput.js","components/UI/Banner.js","components/UI/FighHolder.js","components/UI/Versus.js","pages/Fight.js","components/Cards/CharacterCard.js","components/UI/HomeModal.js","components/Search/ModalItem.js","components/Search/CharacterModal.js","components/Search/HomeInput.js","pages/Home.js","components/Rankings/columns.js","components/Rankings/GlobalFilter.js","components/Rankings/RankingsTable.js","pages/Rankings.js","App.js","store/index.js","index.js"],"names":["module","exports","fightsSlice","createSlice","name","initialState","totalFights","fights","date","reducers","addFight","state","action","payload","numberOfFights","clearFights","fightsActions","actions","Sidebar","dispatch","useDispatch","className","classes","sidebar","logo","nav","to","activeClassName","active","exact","onClick","Layout","props","wrapper","main","children","Card","hasWon","useSelector","rankings","hasChanged","winner","card","image","src","imgPath","alt","sendFightsData","createAsyncThunk","a","fetch","method","body","JSON","stringify","ok","Error","updateRankings","fetchRankings","response","json","fetchedRankings","console","log","updateData","fight","winnerCharacterIndex","findIndex","character","id","push","wins","winPercent","loserCharacterIndex","loser","sendNewRankings","updatedRankings","sort","first","second","newRankings","fetchTableData","data","rankingsSlice","updateFlag","clearRankings","extraReducers","fulfilled","rankingsActions","FightButton","style","marginBottom","type","HomeFlexWrapper","getRandomInt","min","max","Math","floor","random","FightsInput","numberInputRef","useRef","getTotalCharacters","API_KEY","parseInt","total","getCharacter","number","params","URLSearchParams","apikey","limit","offset","results","getTwoRandomCharacter","totalCharacters","firstRandomNumber","secondRandomNumber","firstRandomCharacter","secondRandomCharacter","thumbnail","path","extension","formSubmitHandler","event","preventDefault","current","value","i","randomCharacters","Date","toISOString","split","container","onSubmit","htmlFor","input","ref","Banner","FightHolder","Versus","versus","Fight","useEffect","map","CharacterCard","onClickHandler","onShowModal","footer","bind","comics","available","events","series","Backdrop","backdrop","onClose","ModalOverlay","modal","portalElement","document","getElementById","HomeModal","ReactDOM","createPortal","ModalItem","dates","find","urlMarvel","urls","url","infoData","diamonCode","pageCount","start","end","startYear","endYear","target","href","rel","header","title","info","description","CharacterModal","useState","modalData","setModalData","append","fetchData","result","HomeInput","searchInput","setSearchInput","searchType","setSearchType","firstOptionChecked","setFirstOptionChecked","radioInputChangeHandler","onChange","placeholder","disabled","Home","hasSearched","setHasSearched","setResults","showModal","setShowModal","showModalHandler","COLUMNS","Header","accessor","Cell","GlobalFilter","filter","setFilter","RankingsTable","columns","useMemo","tableInstance","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","prepareRow","setGlobalFilter","globalFilter","pageIndex","table","group","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","length","Rankings","App","store","configureStore","reducer"],"mappings":"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","file":"static/js/main.6a1346a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3bdlW\",\"logo\":\"Sidebar_logo__3KqnJ\",\"nav\":\"Sidebar_nav__31tgc\",\"active\":\"Sidebar_active__2giMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ModalItem_container__1wnal\",\"image\":\"ModalItem_image__BzZ87\",\"body\":\"ModalItem_body__3M49o\",\"header\":\"ModalItem_header__1myOj\",\"info\":\"ModalItem_info__3Hik2\",\"description\":\"ModalItem_description__2xZRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RankingsTable_container__2C22V\",\"table\":\"RankingsTable_table__12gAM\",\"actions\":\"RankingsTable_actions__suF_r\",\"filter\":\"RankingsTable_filter__1YIc0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3xK6A\",\"name\":\"Card_name__3wmBn\",\"image\":\"Card_image__2cpQH\",\"winner\":\"Card_winner__3DR8n\",\"win\":\"Card_win__3h28b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CharacterCard_container__2fs1z\",\"image-frame\":\"CharacterCard_image-frame__22xe9\",\"image-frame__wrapper\":\"CharacterCard_image-frame__wrapper__24P3k\",\"card-body\":\"CharacterCard_card-body__1h3cC\",\"footer\":\"CharacterCard_footer__1t3iP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-container\":\"HomeInput_form-container__3k67-\",\"actions\":\"HomeInput_actions__3PCPZ\",\"radio-toolbar\":\"HomeInput_radio-toolbar__2KsX-\",\"first-check\":\"HomeInput_first-check__qVWjo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CharacterModal_container__2dZtf\",\"title\":\"CharacterModal_title__Hdops\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Layout_wrapper__2E0XN\",\"main\":\"Layout_main__6Vd32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FightsInput_container__1_lwj\",\"input\":\"FightsInput_input__2K3bd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"HomeModal_backdrop__2gLhq\",\"modal\":\"HomeModal_modal__H0-0W\",\"slide-down\":\"HomeModal_slide-down__2TgGg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex-wrapper\":\"HomeFlexWrapper_flex-wrapper__3vF8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Banner_container__2Psx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FightHolder_container__1MjHu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"versus\":\"Versus_versus__2Ar_Z\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst fightsSlice = createSlice({\r\n  name: \"fights\",\r\n  initialState: {\r\n    totalFights: 0,\r\n    fights: [],\r\n    date: null,\r\n  },\r\n  reducers: {\r\n    addFight(state, action) {\r\n      state.totalFights = action.payload.numberOfFights;\r\n      state.fights = action.payload.fights;\r\n      state.date = action.payload.date;\r\n    },\r\n    clearFights(state) {\r\n      state.totalFights = 0;\r\n      state.fights = [];\r\n      state.date = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const fightsActions = fightsSlice.actions;\r\n\r\nexport default fightsSlice;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { fightsActions } from \"../../store/fights-slice\";\r\n\r\nimport classes from \"./Sidebar.module.css\";\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const clickHandler = () => {\r\n    dispatch(fightsActions.clearFights());\r\n  };\r\n  return (\r\n    <div className={classes.sidebar}>\r\n      <div className={classes.logo}>Marvel Fights</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/\" activeClassName={classes.active} exact>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              onClick={clickHandler}\r\n              to=\"/fight\"\r\n              activeClassName={classes.active}\r\n            >\r\n              Fight\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/rankings\" activeClassName={classes.active}>\r\n              Rankings\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import classes from \"./Layout.module.css\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Sidebar />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { useSelector } from \"react-redux\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  const rankings = useSelector((state) => state.rankings);\r\n  const hasWon = rankings.hasChanged && props.winner;\r\n  return (\r\n    <div className={classes.card}>\r\n      <div\r\n        className={hasWon ? `${classes.name} ${classes.winner}` : classes.name}\r\n      >\r\n        <p>{props.name}</p>\r\n      </div>\r\n      <div className={classes.image}>\r\n        <img src={props.imgPath} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const sendFightsData = createAsyncThunk(\r\n  \"fights/sendFightsData\",\r\n  async (fights) => {\r\n    const response = await fetch(\r\n      \"https://react-http-ab801-default-rtdb.firebaseio.com/fights.json\",\r\n      { method: \"POST\", body: JSON.stringify(fights) }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error();\r\n    }\r\n  }\r\n);\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const updateRankings = createAsyncThunk(\r\n  \"rankings/updateRankings\",\r\n  async (fights) => {\r\n    const fetchRankings = async () => {\r\n      const response = await fetch(\r\n        \"https://react-http-ab801-default-rtdb.firebaseio.com/rankings.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error();\r\n      }\r\n      const fetchedRankings = await response.json();\r\n      console.log(fetchedRankings);\r\n      // if (fetchedRankings === null) return [];\r\n      return fetchedRankings;\r\n    };\r\n\r\n    const updateData = (rankings) => {\r\n      console.log(rankings);\r\n      console.log(fights);\r\n      let fetchedRankings = rankings;\r\n      for (let fight of fights.fights) {\r\n        const winnerCharacterIndex = fetchedRankings.findIndex(\r\n          (character) => character.id === fight.winner\r\n        );\r\n        if (winnerCharacterIndex === -1) {\r\n          fetchedRankings.push({\r\n            id: fight.winner.id,\r\n            name: fight.winner.name,\r\n            wins: 1,\r\n            totalFights: 1,\r\n            winPercent: 100,\r\n          });\r\n        } else {\r\n          fetchedRankings[winnerCharacterIndex].winPercent =\r\n            ((fetchedRankings[winnerCharacterIndex].wins + 1) /\r\n              (fetchedRankings[winnerCharacterIndex].totalFights + 1)) *\r\n            100;\r\n          fetchedRankings[winnerCharacterIndex].wins++;\r\n          fetchedRankings[winnerCharacterIndex].totalFights++;\r\n        }\r\n        const loserCharacterIndex = fetchedRankings.findIndex(\r\n          (character) => character.id === fight.loser\r\n        );\r\n        if (loserCharacterIndex === -1) {\r\n          fetchedRankings.push({\r\n            id: fight.loser.id,\r\n            name: fight.loser.name,\r\n            wins: 0,\r\n            totalFights: 1,\r\n            winPercent: 0,\r\n          });\r\n        } else {\r\n          fetchedRankings[loserCharacterIndex].winPercent =\r\n            (fetchedRankings[winnerCharacterIndex].wins /\r\n              (fetchedRankings[winnerCharacterIndex].totalFights + 1)) *\r\n            100;\r\n          fetchedRankings[winnerCharacterIndex].totalFights++;\r\n        }\r\n      }\r\n      return fetchedRankings;\r\n    };\r\n\r\n    const sendNewRankings = async (updatedRankings) => {\r\n      const rankings = updatedRankings.sort(\r\n        (first, second) => second.winPercent - first.winPercent\r\n      );\r\n      console.log(rankings);\r\n      const response = await fetch(\r\n        \"https://react-http-ab801-default-rtdb.firebaseio.com/rankings.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(rankings),\r\n        }\r\n      );\r\n      if (!response.ok) throw new Error();\r\n    };\r\n\r\n    let rankings = await fetchRankings();\r\n    const newRankings = updateData(rankings);\r\n    await sendNewRankings(newRankings);\r\n    return newRankings;\r\n  }\r\n);\r\n\r\nexport const fetchTableData = createAsyncThunk(\r\n  \"rankings/fetchTableData\",\r\n  async () => {\r\n    const response = await fetch(\r\n      \"https://react-http-ab801-default-rtdb.firebaseio.com/rankings.json\"\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchTableData, updateRankings } from \"./rankings-actions\";\r\n\r\nconst rankingsSlice = createSlice({\r\n  name: \"rankings\",\r\n  initialState: {\r\n    rankings: [],\r\n    hasChanged: false,\r\n  },\r\n  reducers: {\r\n    updateFlag(state) {\r\n      state.hasChanged = true;\r\n    },\r\n    clearRankings(state) {\r\n      state.rankings = [];\r\n      state.hasChanged = false;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [updateRankings.fulfilled]: (state, action) => {\r\n      state.rankings = action.payload;\r\n    },\r\n    [fetchTableData.fulfilled]: (state, action) => {\r\n      state.rankings = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const rankingsActions = rankingsSlice.actions;\r\n\r\nexport default rankingsSlice;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendFightsData } from \"../../store/fights-actions\";\r\nimport { updateRankings } from \"../../store/rankings-actions\";\r\nimport { rankingsActions } from \"../../store/rankings-slice\";\r\n\r\nconst FightButton = () => {\r\n  const fights = useSelector((state) => state.fights);\r\n  const dispatch = useDispatch();\r\n  const fightButtonHandler = () => {\r\n    dispatch(rankingsActions.clearRankings());\r\n    dispatch(sendFightsData(fights));\r\n    dispatch(updateRankings(fights));\r\n    dispatch(rankingsActions.updateFlag());\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={{ marginBottom: 20 + \"px\" }}\r\n      onClick={fightButtonHandler}\r\n      type=\"button\"\r\n    >\r\n      FIGHT!\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FightButton;\r\n","import classes from \"./HomeFlexWrapper.module.css\";\r\n\r\nconst HomeFlexWrapper = (props) => {\r\n  return <div className={classes[\"flex-wrapper\"]}>{props.children}</div>;\r\n};\r\n\r\nexport default HomeFlexWrapper;\r\n","import { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { API_KEY } from \"../../App\";\r\nimport { fightsActions } from \"../../store/fights-slice\";\r\nimport classes from \"./FightsInput.module.css\";\r\n\r\nconst getRandomInt = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nconst FightsInput = () => {\r\n  const numberInputRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const getTotalCharacters = async () => {\r\n    const response = await fetch(\r\n      `https://gateway.marvel.com/v1/public/characters?apikey=${API_KEY}`\r\n    );\r\n    const data = await response.json();\r\n    return parseInt(data.data.total);\r\n  };\r\n\r\n  const getCharacter = async (number) => {\r\n    const params = new URLSearchParams({\r\n      apikey: API_KEY,\r\n      limit: 1,\r\n      offset: number,\r\n    });\r\n    const response = await fetch(\r\n      `https://gateway.marvel.com/v1/public/characters?` + params\r\n    );\r\n    const data = await response.json();\r\n    return data.data.results[0];\r\n  };\r\n\r\n  const getTwoRandomCharacter = async () => {\r\n    const totalCharacters = await getTotalCharacters();\r\n    const firstRandomNumber = getRandomInt(0, totalCharacters);\r\n    console.log(\"first random number: \" + firstRandomNumber);\r\n    let secondRandomNumber = getRandomInt(0, totalCharacters);\r\n    console.log(\"second random number: \" + secondRandomNumber);\r\n    console.log(firstRandomNumber === secondRandomNumber);\r\n    while (firstRandomNumber === secondRandomNumber) {\r\n      secondRandomNumber = getRandomInt(0, totalCharacters);\r\n    }\r\n    console.log(\"Fetching character\");\r\n    const firstRandomCharacter = await getCharacter(firstRandomNumber);\r\n    // setFirstCharacter({\r\n    //   id: firstRandomCharacter.id,\r\n    //   name: firstRandomCharacter.name,\r\n    //   imgPath: `${firstRandomCharacter.thumbnail.path}/portrait_medium.${firstRandomCharacter.thumbnail.extension}`,\r\n    //   comics: firstRandomCharacter.comics.items.map((comic) => comic.name),\r\n    //   events: firstRandomCharacter.events.items.map((event) => event.name),\r\n    //   series: firstRandomCharacter.series.items.map((serie) => serie.name),\r\n    // });\r\n    const secondRandomCharacter = await getCharacter(secondRandomNumber);\r\n    // setSecondCharacter({\r\n    //   id: firstRandomCharacter.id,\r\n    //   name: firstRandomCharacter.name,\r\n    //   imgPath: `${firstRandomCharacter.thumbnail.path}/portrait_medium.${firstRandomCharacter.thumbnail.extension}`,\r\n    //   // comics: firstRandomCharacter.comics.items.map((comic) => comic.name),\r\n    //   // events: firstRandomCharacter.events.items.map((event) => event.name),\r\n    //   // series: firstRandomCharacter.series.items.map((serie) => serie.name),\r\n    // });\r\n    return [\r\n      {\r\n        id: firstRandomCharacter.id,\r\n        name: firstRandomCharacter.name,\r\n        imgPath: `${firstRandomCharacter.thumbnail.path}/portrait_xlarge.${firstRandomCharacter.thumbnail.extension}`,\r\n        //   comics: secondRandomCharacter.comics.items.map((comic) => comic.name),\r\n        //   events: secondRandomCharacter.events.items.map((event) => event.name),\r\n        //   series: secondRandomCharacter.series.items.map((serie) => serie.name),\r\n      },\r\n      {\r\n        id: secondRandomCharacter.id,\r\n        name: secondRandomCharacter.name,\r\n        imgPath: `${secondRandomCharacter.thumbnail.path}/portrait_xlarge.${secondRandomCharacter.thumbnail.extension}`,\r\n        // comics: secondRandomCharacter.comics.items.map((comic) => comic.name),\r\n        // events: secondRandomCharacter.events.items.map((event) => event.name),\r\n        // series: secondRandomCharacter.series.items.map((serie) => serie.name),\r\n      },\r\n    ];\r\n  };\r\n\r\n  const formSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Working\");\r\n    dispatch(fightsActions.clearFights());\r\n    const numberOfFights = numberInputRef.current.value;\r\n    let fights = [];\r\n    for (let i = 0; i < numberOfFights; i++) {\r\n      let randomCharacters = await getTwoRandomCharacter();\r\n      let winner = randomCharacters[0];\r\n      let loser = randomCharacters[1];\r\n      if (randomCharacters[1].id > randomCharacters[0].id) {\r\n        winner = randomCharacters[1];\r\n        loser = randomCharacters[0];\r\n      }\r\n      fights.push({\r\n        //characters: [randomCharacters[0], randomCharacters[1]],\r\n        winner: winner,\r\n        loser: loser,\r\n      });\r\n    }\r\n\r\n    console.log(fights);\r\n    // let winner = fights.characters[0].id;\r\n    // if (fights.characters[1].id > fights.characters[0].id) {\r\n    //   winner = fights.characters[1].id;\r\n    // }\r\n\r\n    dispatch(\r\n      fightsActions.addFight({\r\n        fights: fights,\r\n        numberOfFights: numberOfFights,\r\n        date: new Date().toISOString().split(\"T\")[0],\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <form onSubmit={formSubmitHandler}>\r\n        <label htmlFor=\"numberOfFights\">Number of Fights:</label>\r\n        <input\r\n          className={classes.input}\r\n          ref={numberInputRef}\r\n          name=\"numberOfFights\"\r\n          min=\"1\"\r\n          type=\"number\"\r\n        />\r\n        <button type=\"submit\">Set</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FightsInput;\r\n","import classes from \"./Banner.module.css\";\r\n\r\nconst Banner = () => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <h1>Marvel Fights</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import classes from \"./FightHolder.module.css\";\r\n\r\nconst FightHolder = (props) => {\r\n  return <div className={classes.container}>{props.children}</div>;\r\n};\r\n\r\nexport default FightHolder;\r\n","import classes from \"./Versus.module.css\";\r\n\r\nconst Versus = () => {\r\n  return (\r\n    <div className={classes.versus}>\r\n      <span>vs.</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Versus;\r\n","import { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Card from \"../components/Cards/Card\";\r\nimport FightButton from \"../components/UI/FightButton\";\r\nimport HomeFlexWrapper from \"../components/Layout/HomeFlexWrapper\";\r\nimport FightsInput from \"../components/Search/FightsInput\";\r\nimport Banner from \"../components/UI/Banner\";\r\nimport FightHolder from \"../components/UI/FighHolder\";\r\nimport Versus from \"../components/UI/Versus\";\r\nimport { rankingsActions } from \"../store/rankings-slice\";\r\n\r\nconst Fight = () => {\r\n  const fights = useSelector((state) => state.fights);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(rankingsActions.clearRankings());\r\n  });\r\n  console.log(fights);\r\n  return (\r\n    <Fragment>\r\n      <Banner />\r\n      <div>\r\n        Choose the number of fights for the evening. When satisfied with the\r\n        matches, press FIGHT!\r\n      </div>\r\n      <FightsInput />\r\n      <HomeFlexWrapper>\r\n        {fights.fights.map((fight) => (\r\n          <FightHolder key={fight.winner.id}>\r\n            <Card\r\n              key={fight.winner.id}\r\n              name={fight.winner.name}\r\n              imgPath={fight.winner.imgPath}\r\n              winner={true}\r\n            />\r\n            <Versus />\r\n            <Card\r\n              key={fight.loser.id}\r\n              name={fight.loser.name}\r\n              imgPath={fight.loser.imgPath}\r\n              winner={false}\r\n            />\r\n          </FightHolder>\r\n        ))}\r\n      </HomeFlexWrapper>\r\n      {fights.totalFights !== 0 && <FightButton />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Fight;\r\n","import classes from \"./CharacterCard.module.css\";\r\n\r\nconst CharacterCard = (props) => {\r\n  const data = props.data;\r\n  const imgPath = `${data.thumbnail.path}/portrait_medium.${data.thumbnail.extension}`;\r\n\r\n  const onClickHandler = (type) => {\r\n    console.log(type);\r\n    const path = `https://gateway.marvel.com/v1/public/characters/${data.id}/${type}`;\r\n    console.log(path);\r\n    props.onShowModal(path, data.name, type);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes[\"image-frame\"]}>\r\n        <div className={classes[\"image-frame__wrapper\"]}>\r\n          <img src={imgPath} alt=\"\" />\r\n        </div>\r\n      </div>\r\n      <div className={classes[\"card-body\"]}>\r\n        <p>{data.name}</p>\r\n        <div className={classes.footer}>\r\n          <ul>\r\n            <li onClick={onClickHandler.bind(null, \"comics\")}>\r\n              Comics: {data.comics.available}\r\n            </li>\r\n            <li onClick={onClickHandler.bind(null, \"events\")}>\r\n              Events: {data.events.available}\r\n            </li>\r\n            <li onClick={onClickHandler.bind(null, \"series\")}>\r\n              Series: {data.series.available}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport classes from \"./HomeModal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      {props.children}\r\n      {/* <div className={classes.content}>{props.children}</div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst HomeModal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeModal;\r\n","import { Fragment } from \"react\";\r\nimport classes from \"./ModalItem.module.css\";\r\n\r\nconst ModalItem = (props) => {\r\n  // console.log(props);\r\n  let date = null;\r\n  const imgPath = `${props.data.thumbnail.path}/portrait_medium.${props.data.thumbnail.extension}`;\r\n  if (props.type === \"comics\") {\r\n    // console.log(imgPath);\r\n    date = props.data.dates.find((date) => date.type === \"focDate\").date;\r\n  }\r\n  const urlMarvel = props.data.urls.find((date) => date.type === \"detail\").url;\r\n\r\n  const infoData = (\r\n    <Fragment>\r\n      {props.data.diamonCode && <p>{props.data.diamonCode}</p>}\r\n      {props.type === \"comics\" && <p>Pages: {props.data.pageCount}</p>}\r\n      {date && <p>Published: {date.split(\"T\")[0]}</p>}\r\n      {props.type === \"events\" && (\r\n        <p>Start: {props.data.start.split(\" \")[0]}</p>\r\n      )}\r\n      {props.type === \"events\" && <p>End: {props.data.end.split(\" \")[0]}</p>}\r\n      {props.type === \"series\" && <p>Start: {props.data.startYear}</p>}\r\n      {props.type === \"series\" && <p>End: {props.data.endYear}</p>}\r\n      <a target=\"_blank\" href={urlMarvel} rel=\"noreferrer\">\r\n        more information\r\n      </a>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.image}>\r\n        <img src={imgPath} alt=\"\" />\r\n      </div>\r\n      <div className={classes.body}>\r\n        <div className={classes.header}>\r\n          <p>{props.data.title}</p>\r\n        </div>\r\n        <div className={classes.info}>{infoData}</div>\r\n        <div className={classes.description}>\r\n          {props.data.description && <div>{props.data.description}</div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalItem;\r\n","import { useEffect, useState } from \"react\";\r\nimport { API_KEY } from \"../../App\";\r\nimport HomeModal from \"../UI/HomeModal\";\r\nimport classes from \"./CharacterModal.module.css\";\r\nimport ModalItem from \"./ModalItem\";\r\n\r\nconst CharacterModal = (props) => {\r\n  const [modalData, setModalData] = useState(null);\r\n  console.log(props);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const params = new URLSearchParams();\r\n      params.append(\"apikey\", API_KEY);\r\n      //params.append(\"orderBy\", \"issueNumber\");\r\n      const response = await fetch(props.data.path + \"?\" + params);\r\n      if (!response.ok) {\r\n        throw new Error();\r\n      }\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setModalData(data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <HomeModal onClose={props.onClose}>\r\n      <div className={classes.container}>\r\n        <div className={classes.title}>\r\n          <h1>\r\n            {props.data.name} | {props.data.type}\r\n          </h1>\r\n        </div>\r\n        <div className={classes.body}>\r\n          {modalData &&\r\n            modalData.data.results.map((result) => {\r\n              return (\r\n                <ModalItem\r\n                  key={result.id}\r\n                  data={result}\r\n                  type={props.data.type}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </HomeModal>\r\n  );\r\n};\r\n\r\nexport default CharacterModal;\r\n","import { useState } from \"react\";\r\nimport classes from \"./HomeInput.module.css\";\r\n\r\nconst HomeInput = (props) => {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [searchType, setSearchType] = useState(\"characters\");\r\n  const [firstOptionChecked, setFirstOptionChecked] = useState(true);\r\n  //let firstOptionChecked = true;\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setSearchInput(event.target.value);\r\n  };\r\n\r\n  const radioInputChangeHandler = (event) => {\r\n    // if (searchType === \"characters\") {\r\n    //   setFirstOptionChecked(true);\r\n    // } else {\r\n    setFirstOptionChecked(false);\r\n    // }\r\n    // firstOptionChecked = false;\r\n    setSearchType(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onSubmit(searchInput, searchType);\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"form-container\"]}>\r\n      <form onSubmit={submitHandler}>\r\n        {/* <label htmlFor=\"search\">Search</label> */}\r\n        <input\r\n          name=\"search\"\r\n          type=\"text\"\r\n          onChange={inputChangeHandler}\r\n          value={searchInput}\r\n          placeholder=\"Type here\"\r\n        />\r\n        <div className={classes.actions}>\r\n          <div className={classes[\"radio-toolbar\"]}>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"characters\"\r\n              name=\"option\"\r\n              value=\"characters\"\r\n              onChange={radioInputChangeHandler}\r\n              className={firstOptionChecked ? classes[\"first-check\"] : \"\"}\r\n            />\r\n            <label htmlFor=\"characters\">characters</label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"comics\"\r\n              name=\"option\"\r\n              value=\"comics\"\r\n              onChange={radioInputChangeHandler}\r\n              disabled\r\n            />\r\n            <label htmlFor=\"comics\">comics</label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"series\"\r\n              name=\"option\"\r\n              value=\"series\"\r\n              onChange={radioInputChangeHandler}\r\n              disabled\r\n            />\r\n            <label htmlFor=\"series\">series</label>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"events\"\r\n              name=\"option\"\r\n              value=\"events\"\r\n              onChange={radioInputChangeHandler}\r\n              disabled\r\n            />\r\n            <label htmlFor=\"events\">events</label>\r\n          </div>\r\n          <button type=\"submit\">Search</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeInput;\r\n","import { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { API_KEY } from \"../App\";\r\nimport CharacterCard from \"../components/Cards/CharacterCard\";\r\nimport HomeFlexWrapper from \"../components/Layout/HomeFlexWrapper\";\r\nimport CharacterModal from \"../components/Search/CharacterModal\";\r\nimport HomeInput from \"../components/Search/HomeInput\";\r\nimport SearchResults from \"../components/Search/SearchResults\";\r\nimport Banner from \"../components/UI/Banner\";\r\n\r\nconst Home = () => {\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalData, setModalData] = useState({\r\n    path: \"\",\r\n    name: \"\",\r\n    type: \"\",\r\n    id: \"\",\r\n  });\r\n\r\n  const submitHandler = (searchInput, searchType) => {\r\n    const params = new URLSearchParams();\r\n    params.append(\"apikey\", API_KEY);\r\n    if (searchType === \"characters\" || searchType === \"events\") {\r\n      params.append(\"nameStartsWith\", searchInput);\r\n    } else {\r\n      params.append(\"titleStartsWith\", searchInput);\r\n    }\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        `https://gateway.marvel.com/v1/public/${searchType}?` + params\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      setResults(data.data.results);\r\n      setHasSearched(true);\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  const showModalHandler = (path, name, type) => {\r\n    setShowModal(true);\r\n    setModalData({\r\n      path,\r\n      name,\r\n      type,\r\n    });\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Banner />\r\n      <HomeInput onSubmit={submitHandler} />\r\n      <HomeFlexWrapper>\r\n        {hasSearched &&\r\n          results.map((result) => (\r\n            <CharacterCard\r\n              key={result.id}\r\n              onShowModal={showModalHandler}\r\n              data={result}\r\n            />\r\n          ))}\r\n        {hasSearched && showModal && (\r\n          <CharacterModal data={modalData} onClose={closeModalHandler} />\r\n        )}\r\n      </HomeFlexWrapper>\r\n      {/* {hasSearched && <SearchResults results={results} />} */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const COLUMNS = [\r\n  // {\r\n  //   Header: \"Id\",\r\n  //   accessor: \"id\",\r\n  // },\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"name\",\r\n  },\r\n  {\r\n    Header: \"Wins\",\r\n    accessor: \"wins\",\r\n  },\r\n  {\r\n    Header: \"Total Fights\",\r\n    accessor: \"totalFights\",\r\n  },\r\n  {\r\n    Header: \"Win Percentage\",\r\n    accessor: \"winPercent\",\r\n    Cell: ({ value }) => {\r\n      return value + \"%\";\r\n    },\r\n  },\r\n];\r\n","import classes from \"./RankingsTable.module.css\";\r\n\r\nconst GlobalFilter = ({ filter, setFilter }) => {\r\n  const filterChangeHandler = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className={classes.filter}>\r\n      <span>\r\n        Search: {\"  \"}\r\n        <input value={filter || \"\"} onChange={filterChangeHandler} />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalFilter;\r\n","import { Fragment } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  usePagination,\r\n} from \"react-table\";\r\nimport { COLUMNS } from \"./columns\";\r\nimport GlobalFilter from \"./GlobalFilter\";\r\nimport classes from \"./RankingsTable.module.css\";\r\n\r\nconst RankingsTable = () => {\r\n  const rankings = useSelector((state) => state.rankings);\r\n  console.log(rankings);\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => rankings.rankings, [rankings.rankings]);\r\n  console.log(data);\r\n  const tableInstance = useTable(\r\n    { columns, data },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n  } = tableInstance;\r\n\r\n  const { globalFilter, pageIndex } = state;\r\n\r\n  const previousPageHandler = () => {\r\n    previousPage();\r\n  };\r\n  const nextPageHandler = () => {\r\n    nextPage();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <table {...getTableProps()} className={classes.table}>\r\n        <thead>\r\n          {headerGroups.map((group) => (\r\n            <tr {...group.getHeaderGroupProps()}>\r\n              {group.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" 🔽\"\r\n                        : \" 🔼\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className={classes.actions}>\r\n        <span>\r\n          Page {pageIndex + 1} of {pageOptions.length}\r\n        </span>\r\n        <button\r\n          type=\"button\"\r\n          onClick={previousPageHandler}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button type=\"button\" onClick={nextPageHandler} disabled={!canNextPage}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingsTable;\r\n","import { Fragment } from \"react\";\r\nimport RankingsTable from \"../components/Rankings/RankingsTable\";\r\nimport Banner from \"../components/UI/Banner\";\r\n\r\nconst Rankings = () => {\r\n  return (\r\n    <Fragment>\r\n      <Banner />\r\n\r\n      <RankingsTable />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Rankings;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nimport Fight from \"./pages/Fight\";\r\nimport Home from \"./pages/Home\";\r\nimport Rankings from \"./pages/Rankings\";\r\nimport { fetchTableData } from \"./store/rankings-actions\";\r\n\r\nexport const API_KEY = \"80727d5bf08d5acb7187fa7a3a48a957\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTableData());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/fight\">\r\n          <Fight />\r\n        </Route>\r\n        <Route path=\"/rankings\">\r\n          <Rankings />\r\n        </Route>\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport fightsSlice from \"./fights-slice\";\r\nimport rankingsSlice from \"./rankings-slice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    fights: fightsSlice.reducer,\r\n    rankings: rankingsSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}